{

// testedfiles: SleposImageBuilder.ycp

include "testsuite.ycp";
TESTSUITE_INIT([], nil);

import "SleposImageBuilder";

integer testNum = 0;

map READ = $[];
map WRITE = $[];
map EXECUTE_0 = $[
	"target" : $[
		"bash_output" : $["exit":0, "stdout":"stdout messages", "stderr":"An error message!"]
	]
];

map EXECUTE_1 = $[
	"target" : $[
		"bash_output" : $["exit":1, "stdout":"stdout messages", "stderr":"An error message!"]
	]
];

SleposImageBuilder::ImagesMap = add(SleposImageBuilder::ImagesMap, "minimal-1.0.0", $[
		"//ImageSpecification/@ImageName"			: "minimal",
		"//ImageSpecification/@ImageVersion"			: "1.0.0",
		"//ImageSpecification/@Type"				: "ext2",
		"//ImageSpecification/@ImageType"			: "diskless",
		"//ImageSpecification/@Timezone"			: "US/Mountain",
		"//ImageSpecification/@Locale"				: "ja_JP.UTF-8",
		"//ImageSpecification/@Keytable"			: "us.map.gz",
		"//RPMSpecifications/DistributionSource/@ImageClass"	: "nld",
		"CompressDiskImage"					: true,
		"KeepRPMDatabase"					: false,
		"VerifyRPM"						: false
	]);

DUMP(sformat("SleposImageBuilder::ImagesMap=%1", SleposImageBuilder::ImagesMap));

// Test for nil param
testNum = testNum + 1;
DUMP("*******************************************************");
DUMP(sformat("TEST CASE #%1", testNum));
string image_key = nil;
DUMP(sformat("SleposImageBuilder::deleteImageDescrTree(%1)", image_key));
TEST(``(SleposImageBuilder::deleteImageDescrTree(image_key)), [READ,WRITE,EXECUTE_0], nil);

// Test for empty string param
testNum = testNum + 1;
DUMP("*******************************************************");
DUMP(sformat("TEST CASE #%1", testNum));
image_key = "";
DUMP(sformat("SleposImageBuilder::deleteImageDescrTree(%1)", image_key));
TEST(``(SleposImageBuilder::deleteImageDescrTree(image_key)), [READ,WRITE,EXECUTE_0], nil);

// test for valid remove command w/ retcode == 0
testNum = testNum + 1;
DUMP("*******************************************************");
DUMP(sformat("TEST CASE #%1", testNum));
image_key = "minimal-1.0.0";
DUMP(sformat("SleposImageBuilder::deleteImageDescrTree(%1)", image_key));
TEST(``(SleposImageBuilder::deleteImageDescrTree(image_key)), [READ,WRITE,EXECUTE_0], nil);

// test for valid remove command w/ retcode != 0
testNum = testNum + 1;
DUMP("*******************************************************");
DUMP(sformat("TEST CASE #%1", testNum));
DUMP(sformat("SleposImageBuilder::deleteImageDescrTree(%1)", image_key));
TEST(``(SleposImageBuilder::deleteImageDescrTree(image_key)), [READ,WRITE,EXECUTE_1], nil);

DUMP(sformat("SleposImageBuilder::ImagesMap=%1", SleposImageBuilder::ImagesMap));

}
